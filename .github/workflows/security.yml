name: Security CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactive le clone en mode shallow pour une meilleure analyse
          
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

  dependency_check:
    name: Dependency Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "Vulnerable-App"
          format: "HTML"
          output: "reports"

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: reports

  dast_scan:
    name: Dynamic Analysis with OWASP ZAP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Pull OWASP ZAP Image (Corrected)
        run: |
          docker pull owasp/zap2docker-weekly

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.5.0
        with:
          target: "http://localhost:3000"
          docker_name: "owasp/zap2docker-weekly"  # Correction de l'image Docker
          fail_action: false  # Empêche l'échec en cas d'erreurs mineures
          rules_file_name: ".zap/rules.tsv"
        continue-on-error: true  # Évite que l'exécution ne bloque sur ZAP

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: report.html
